name: Publish Release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest

    env:
      CLASPRC_ACCESS_TOKEN: ${{ secrets.CLASPRC_ACCESS_TOKEN }}
      CLASPRC_CLIENT_ID: ${{ secrets.CLASPRC_CLIENT_ID }}
      CLASPRC_CLIENT_SECRET: ${{ secrets.CLASPRC_CLIENT_SECRET }}
      CLASPRC_EXPIRY_DATE: ${{ secrets.CLASPRC_EXPIRY_DATE }}
      CLASPRC_ID_TOKEN: ${{ secrets.CLASPRC_ID_TOKEN }}
      CLASPRC_REFRESH_TOKEN: ${{ secrets.CLASPRC_REFRESH_TOKEN }}
      CLASP_SCRIPT_ID: ${{ secrets.CLASP_SCRIPT_ID }}
      CHATWORK_API_TOKEN: ${{ secrets.CHATWORK_API_TOKEN }}
      CHATWORK_ROOM_ID: ${{ secrets.CHATWORK_ROOM_ID }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2-beta
        with:
          node-version: "14"
      - name: Create ./src/environments.json
        run: |
          echo $(cat <<-EOS
          {
            "CHATWORK_API_TOKEN": "${CHATWORK_API_TOKEN}",
            "CHATWORK_ROOM_ID": "${CHATWORK_ROOM_ID}"
          }
          EOS
          ) > ./src/environments.json

      - id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install --frozen-lockfile
      - run: yarn build

      - name: Create ~/.clasprc.json
        run: |
          echo $(cat <<-EOS
          {
            "token": {
              "access_token": "${CLASPRC_ACCESS_TOKEN}",
              "scope": "https://www.googleapis.com/auth/script.deployments https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/drive.file openid https://www.googleapis.com/auth/service.management https://www.googleapis.com/auth/script.projects https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/drive.metadata.readonly https://www.googleapis.com/auth/logging.read https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/script.webapp.deploy",
              "token_type": "Bearer",
              "id_token": "${CLASPRC_ID_TOKEN}",
              "expiry_date": ${CLASPRC_EXPIRY_DATE},
              "refresh_token": "${CLASPRC_REFRESH_TOKEN}"
            },
            "oauth2ClientSettings": {
              "clientId": "${CLASPRC_CLIENT_ID}",
              "clientSecret": "${CLASPRC_CLIENT_SECRET}",
              "redirectUri": "http://localhost"
            },
            "isLocalCreds": false
          }
          EOS
          ) > ~/.clasprc.json
      - name: Create ~/.clasp.json
        run: |
          echo $(cat <<-EOS
          {
            "scriptId": "${CLASP_SCRIPT_ID}",
            "rootDir": "./dist"
          }
          EOS
          ) > ~/.clasp.json

      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: Upload files
        run: npx @google/clasp push --force

      - name: Add version
        run: npx @google/clasp version ${{ steps.get_version.outputs.VERSION }}
